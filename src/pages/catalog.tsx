import Head from "next/head";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import ProductListCard from "@/components/ProductListCard";
import Filters, { FilterConfig } from "@/components/Filters";
import FiltersWithSearch from "@/components/FiltersWithoutSearch";
import CatalogProductCard from "@/components/CatalogProductCard";
import CatalogPagination from "@/components/CatalogPagination";
import CatalogSubscribe from "@/components/CatalogSubscribe";
import CatalogInfoHeader from "@/components/CatalogInfoHeader";
import React, { useState, useEffect, useCallback, useMemo } from "react";
import { useRouter } from "next/router";
import { useQuery } from '@apollo/client';
import FiltersPanelMobile from '@/components/FiltersPanelMobile';
import MobileMenuBottomSection from '../components/MobileMenuBottomSection';
import { GET_PARTSAPI_ARTICLES, GET_PARTSAPI_MAIN_IMAGE, SEARCH_PRODUCT_OFFERS } from '@/lib/graphql';
import { PartsAPIArticlesData, PartsAPIArticlesVariables, PartsAPIArticle, PartsAPIMainImageData, PartsAPIMainImageVariables } from '@/types/partsapi';
import { useInfiniteScroll } from '@/hooks/useInfiniteScroll';
import LoadingSpinner from '@/components/LoadingSpinner';
import ArticleCard from '@/components/ArticleCard';

const mockData = Array(12).fill({
  image: "/images/image-10.png",
  discount: "-35%",
  price: "–æ—Ç 17 087 ‚ÇΩ",
  oldPrice: "22 347 ‚ÇΩ",
  title: '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω–∞—è –±–∞—Ç–∞—Ä–µ—è TYUMEN BATTERY "STANDARD", 6CT-60L, 60',
  brand: "Borsehung",
});

const catalogFilters: FilterConfig[] = [
  {
    type: "dropdown",
    title: "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å",
    options: ["Bosch", "Varta", "Mutlu", "Exide", "Topla", "TAB", "Rocket", "Akom", "Medalist", "Tyumen", "FB", "Delkor"],
    multi: true,
    showAll: true,
  },
  {
    type: "dropdown",
    title: "–ü–æ–ª—è—Ä–Ω–æ—Å—Ç—å",
    options: ["–û–±—Ä–∞—Ç–Ω–∞—è", "–ü—Ä—è–º–∞—è", "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è"],
    multi: false,
  },
  {
    type: "range",
    title: "–ï–º–∫–æ—Å—Ç—å (–ê/—á)",
    min: 1,
    max: 20000,
  },
];

// –§–∏–ª—å—Ç—Ä—ã –±–µ–∑ –ø–æ–∏—Å–∫–∞ –¥–ª—è PartsAPI —Ä–µ–∂–∏–º–∞ (–∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ)
// const catalogFiltersWithoutSearch: FilterConfig[] = catalogFilters;

// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞ —Ä–∞–∑
const ITEMS_PER_PAGE = 20;

export default function Catalog() {
  const router = useRouter();
  const [showFiltersMobile, setShowFiltersMobile] = useState(false);
  // const [showSortMobile, setShowSortMobile] = useState(false); // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ
  const [allArticles, setAllArticles] = useState<PartsAPIArticle[]>([]);
  const [visibleArticles, setVisibleArticles] = useState<PartsAPIArticle[]>([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [isLoadingMore, setIsLoadingMore] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedFilters, setSelectedFilters] = useState<Record<string, string[]>>({});

  // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL –¥–ª—è PartsAPI –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const { partsApiCategory, categoryName, carId, carType } = router.query;
  const isPartsAPIMode = !!partsApiCategory;

  // console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—Ç–∞–ª–æ–≥–∞:', { partsApiCategory, categoryName, carId, carType, isPartsAPIMode });

  // –ó–∞–ø—Ä–æ—Å –∞—Ä—Ç–∏–∫—É–ª–æ–≤ PartsAPI –µ—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è
  const { data: articlesData, loading: articlesLoading, error: articlesError } = useQuery<PartsAPIArticlesData, PartsAPIArticlesVariables>(
    GET_PARTSAPI_ARTICLES,
    {
      variables: {
        strId: partsApiCategory ? parseInt(partsApiCategory as string) : 0,
        carId: carId ? parseInt(carId as string) : 9877,
        carType: (carType as any) || 'PC'
      },
      skip: !isPartsAPIMode || !partsApiCategory,
      errorPolicy: 'ignore', // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å UI
      fetchPolicy: 'cache-first', // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å
      notifyOnNetworkStatusChange: false // –ù–µ —É–≤–µ–¥–æ–º–ª—è–µ–º –æ —Å—Ç–∞—Ç—É—Å–µ —Å–µ—Ç–∏
    }
  );

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∞—Ä—Ç–∏–∫—É–ª—ã –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  useEffect(() => {
    if (articlesData?.partsAPIArticles && articlesData.partsAPIArticles.length > 0) {
      // console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –∞—Ä—Ç–∏–∫—É–ª—ã PartsAPI:', articlesData.partsAPIArticles.length);
      setAllArticles(articlesData.partsAPIArticles);
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ—Ä—Ü–∏—é –∞—Ä—Ç–∏–∫—É–ª–æ–≤
      setVisibleArticles(articlesData.partsAPIArticles.slice(0, ITEMS_PER_PAGE));
      setCurrentPage(1);
    }
  }, [articlesData]);

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è PartsAPI
  const generatePartsAPIFilters = useCallback((): FilterConfig[] => {
    if (!allArticles.length) return [];

    const brands = new Set<string>();
    const productGroups = new Set<string>();

    allArticles.forEach(article => {
      if (article.artSupBrand) brands.add(article.artSupBrand);
      if (article.productGroup) productGroups.add(article.productGroup);
    });

    const filters: FilterConfig[] = [];

    if (brands.size > 1) {
      filters.push({
        type: "dropdown",
        title: "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å",
        options: Array.from(brands).sort(),
        multi: true,
        showAll: true,
      });
    }

    if (productGroups.size > 1) {
      filters.push({
        type: "dropdown",
        title: "–ì—Ä—É–ø–ø–∞ —Ç–æ–≤–∞—Ä–æ–≤",
        options: Array.from(productGroups).sort(),
        multi: true,
        showAll: true,
      });
    }

    return filters;
  }, [allArticles]);

  const dynamicFilters = generatePartsAPIFilters();

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFilterChange = useCallback((filterTitle: string, values: string[]) => {
    setSelectedFilters(prev => ({
      ...prev,
      [filterTitle]: values
    }));
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É –∏ —Ñ–∏–ª—å—Ç—Ä–∞–º
  const filteredArticles = useMemo(() => {
    return allArticles.filter(article => {
      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É
      if (searchQuery.trim()) {
        const searchLower = searchQuery.toLowerCase();
        const articleTitle = [
          article.artSupBrand || '',
          article.artArticleNr || '',
          article.productGroup || ''
        ].join(' ').toLowerCase();
        
        if (!articleTitle.includes(searchLower)) {
          return false;
        }
      }
      
      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
      const brandFilter = selectedFilters['–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å'] || [];
      if (brandFilter.length > 0 && !brandFilter.includes(article.artSupBrand || '')) {
        return false;
      }
      
      const groupFilter = selectedFilters['–ì—Ä—É–ø–ø–∞ —Ç–æ–≤–∞—Ä–æ–≤'] || [];
      if (groupFilter.length > 0 && !groupFilter.includes(article.productGroup || '')) {
        return false;
      }
      
      return true;
    });
  }, [allArticles, searchQuery, selectedFilters]);

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º—ã–µ –∞—Ä—Ç–∏–∫—É–ª—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    setVisibleArticles(filteredArticles.slice(0, ITEMS_PER_PAGE));
    setCurrentPage(1);
  }, [searchQuery, selectedFilters, allArticles]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ—Ä—Ü–∏–∏ –∞—Ä—Ç–∏–∫—É–ª–æ–≤
  const loadMoreArticles = useCallback(() => {
    if (isLoadingMore) return;

    const currentFilteredArticles = filteredArticles;
    if (!currentFilteredArticles.length) return;

    setIsLoadingMore(true);
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    setTimeout(() => {
      const nextPage = currentPage + 1;
      const startIndex = (nextPage - 1) * ITEMS_PER_PAGE;
      const endIndex = nextPage * ITEMS_PER_PAGE;
      
      const newArticles = currentFilteredArticles.slice(startIndex, endIndex);
      
      if (newArticles.length > 0) {
        setVisibleArticles(prev => [...prev, ...newArticles]);
        setCurrentPage(nextPage);
        // console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${nextPage}, –∞—Ä—Ç–∏–∫—É–ª–æ–≤: ${newArticles.length}`);
      }
      
      setIsLoadingMore(false);
    }, 300);
  }, [currentPage, filteredArticles, isLoadingMore]);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –µ—Å—Ç—å –ª–∏ –µ—â–µ –∞—Ä—Ç–∏–∫—É–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
  const hasMoreArticles = visibleArticles.length < filteredArticles.length;

  // Hook –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  const { targetRef } = useInfiniteScroll(loadMoreArticles, {
    hasMore: hasMoreArticles,
    isLoading: isLoadingMore,
    threshold: 0.1,
    rootMargin: '200px'
  });

  return (
    <>
      <Head>
        <title>Catalog</title>
        <meta name="description" content="Catalog" />
        <link href="https://fonts.googleapis.com" rel="preconnect" />
        <link href="https://fonts.gstatic.com" rel="preconnect" crossOrigin="anonymous" />
        <link href="/images/favicon.ico" rel="shortcut icon" type="image/x-icon" />
        <link href="/images/webclip.png" rel="apple-touch-icon" />
      </Head>
      <CatalogInfoHeader
        title={isPartsAPIMode ? decodeURIComponent(categoryName as string || '–ó–∞–ø—á–∞—Å—Ç–∏') : "–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã"}
        count={isPartsAPIMode ? filteredArticles.length : 3587}
        productName={isPartsAPIMode ? "–∑–∞–ø—á–∞—Å—Ç—å" : "–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä"}
        breadcrumbs={[
          { label: "–ì–ª–∞–≤–Ω–∞—è", href: "/" },
          { label: "–ö–∞—Ç–∞–ª–æ–≥" },
          ...(isPartsAPIMode ? [{ label: decodeURIComponent(categoryName as string || '–ó–∞–ø—á–∞—Å—Ç–∏') }] : [])
        ]}
        showCount={true}
        showProductHelp={true}
      />
      <section className="main">
        <div className="w-layout-blockcontainer container w-container">
                      <div className="w-layout-hflex flex-block-13">
            <div className="w-layout-hflex flex-block-84">
              {/* –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ */}
              {/* <CatalogSortDropdown active={sortActive} onChange={setSortActive} /> */}
              
              <div className="w-layout-hflex flex-block-85" onClick={() => setShowFiltersMobile((v) => !v)}>
                <span className="code-embed-9 w-embed">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M21 4H14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M10 4H3" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M21 12H12" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M8 12H3" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M21 20H16" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M12 20H3" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M14 2V6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M8 10V14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M16 18V22" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                  </svg>
                </span>
                <div>–§–∏–ª—å—Ç—Ä—ã</div>
              </div>
            </div>
            {/* –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
            <div className="filters-desktop">
              {isPartsAPIMode ? (
                <FiltersWithSearch 
                  filters={dynamicFilters} 
                  searchQuery={searchQuery}
                  onSearchChange={setSearchQuery}
                  selectedFilters={selectedFilters}
                  onFilterChange={handleFilterChange}
                />
              ) : (
                <Filters filters={catalogFilters} />
              )}
            </div>
            <FiltersPanelMobile
              filters={isPartsAPIMode ? dynamicFilters : catalogFilters}
              open={showFiltersMobile}
              onClose={() => setShowFiltersMobile(false)}
              searchQuery={searchQuery}
              onSearchChange={setSearchQuery}
              selectedFilters={selectedFilters}
              onFilterChange={handleFilterChange}
            />
            <div className="w-layout-vflex flex-block-14-copy-copy">
              {/* –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤–∫–ª–∞–¥–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ */}
              {/* <CatalogTabs /> */}
              
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è PartsAPI */}
              {isPartsAPIMode && articlesLoading && (
                <div className="flex justify-center items-center py-8">
                  <LoadingSpinner size="lg" text="–ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª—ã..." />
                </div>
              )}
              
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
              {isPartsAPIMode && articlesError && (
                <div className="flex justify-center items-center py-8">
                  <div className="text-lg text-red-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä—Ç–∏–∫—É–ª–æ–≤: {articlesError.message}</div>
                </div>
              )}
              
              {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ PartsAPI —Å lazy loading */}
              {isPartsAPIMode && visibleArticles.length > 0 && (
                <>
                  {visibleArticles.map((article, idx) => (
                    <ArticleCard
                      key={`${article.artId}_${idx}`}
                      article={article}
                      index={idx}
                    />
                  ))}
                  
                  {/* –≠–ª–µ–º–µ–Ω—Ç-—Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */}
                  {hasMoreArticles && (
                    <div ref={targetRef} className="w-full flex justify-center items-center py-8">
                      {isLoadingMore ? (
                        <LoadingSpinner text="–ó–∞–≥—Ä—É–∂–∞–µ–º –µ—â–µ..." />
                      ) : (
                        <div className="text-gray-400">–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –µ—â–µ</div>
                      )}
                    </div>
                  )}
                  
                  {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–∞—Ö */}
                  {!hasMoreArticles && filteredArticles.length > 0 && (
                    <div className="w-full flex justify-center items-center py-8">
                      <div className="text-gray-600 text-center">
                        <div>–ü–æ–∫–∞–∑–∞–Ω–æ –≤—Å–µ {filteredArticles.length} –∞—Ä—Ç–∏–∫—É–ª–æ–≤{searchQuery.trim() || Object.keys(selectedFilters).some(key => selectedFilters[key].length > 0) ? ' –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º' : ''}</div>
                        <div className="text-sm text-gray-400 mt-1">
                          –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ {ITEMS_PER_PAGE} –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –∑–∞ —Ä–∞–∑
                        </div>
                      </div>
                    </div>
                  )}
                  
                  {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ */}
                  {visibleArticles.length > 0 && hasMoreArticles && (
                    <div className="w-full flex justify-center items-center py-4">
                      <div className="text-sm text-gray-500">
                        –ü–æ–∫–∞–∑–∞–Ω–æ {visibleArticles.length} –∏–∑ {filteredArticles.length} –∞—Ä—Ç–∏–∫—É–ª–æ–≤{searchQuery.trim() || Object.keys(selectedFilters).some(key => selectedFilters[key].length > 0) ? ' –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º' : ''}
                      </div>
                    </div>
                  )}
                </>
              )}
              
              {/* –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –µ—Å–ª–∏ –Ω–µ PartsAPI —Ä–µ–∂–∏–º */}
              {!isPartsAPIMode && mockData.map((item, idx) => (
                <CatalogProductCard
                  key={idx}
                  image={item.image}
                  discount={item.discount}
                  price={item.price}
                  oldPrice={item.oldPrice}
                  title={item.title}
                  brand={item.brand}
                />
              ))}
              
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –∞—Ä—Ç–∏–∫—É–ª–æ–≤ */}
              {isPartsAPIMode && !articlesLoading && allArticles.length === 0 && (
                <div className="flex justify-center items-center py-8">
                  <div className="text-lg text-gray-600">
                    –ê—Ä—Ç–∏–∫—É–ª—ã –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                  </div>
                </div>
              )}
              
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
              {isPartsAPIMode && !articlesLoading && allArticles.length > 0 && searchQuery.trim() && filteredArticles.length === 0 && (
                <div className="flex justify-center items-center py-8">
                  <div className="text-lg text-gray-600">
                    –ü–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                  </div>
                </div>
              )}
              
              {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ-PartsAPI —Ä–µ–∂–∏–º–∞ */}
              {!isPartsAPIMode && <CatalogPagination />}
            </div>
          </div>
        </div>
      </section>
      <section className="section-3">
        <CatalogSubscribe />
      </section>
      <Footer />
      <MobileMenuBottomSection />
    </>
  );
} 