import React, { useState, useEffect } from 'react';
import { useQuery } from '@apollo/client';
import { GET_LAXIMO_QUICK_GROUPS, GET_LAXIMO_CATEGORIES, GET_LAXIMO_UNITS, GET_LAXIMO_QUICK_DETAIL } from '@/lib/graphql';
import { LaximoQuickGroup, LaximoQuickDetail } from '@/types/laximo';
import GroupDetailsSection from './GroupDetailsSection';
import { mapToStandardCategories, getStaticCategories, CATEGORY_MAPPING } from '@/lib/laximo-categories';

interface CatalogGroupsSectionProps {
  catalogCode: string;
  vehicleId: string;
  ssd?: string;
}

interface GroupItemProps {
  group: LaximoQuickGroup;
  level: number;
  onGroupClick: (group: LaximoQuickGroup) => void;
}

interface PredefinedCategoryDetailsSectionProps {
  catalogCode: string;
  vehicleId: string;
  predefinedCategory: LaximoQuickGroup;
  ssd: string;
  onBack: () => void;
}

const PredefinedCategoryDetailsSection: React.FC<PredefinedCategoryDetailsSectionProps> = ({
  catalogCode,
  vehicleId,
  predefinedCategory,
  ssd,
  onBack
}) => {
  const [selectedChildGroup, setSelectedChildGroup] = useState<LaximoQuickGroup | null>(null);

  const handleChildGroupClick = (child: LaximoQuickGroup) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ID –¥–æ—á–µ—Ä–Ω–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º —á–∏—Å–ª–æ–≤—ã–º ID Laximo
    if (!/^\d+$/.test(child.quickgroupid)) {
      alert(`–û—à–∏–±–∫–∞: ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${child.quickgroupid}" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º ID Laximo.\n\n–≠—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª—ã –∫–∞—Ç–∞–ª–æ–≥–∞.`);
      return;
    }
    
    setSelectedChildGroup(child);
  };

  if (selectedChildGroup) {
    return (
      <GroupDetailsSection
        catalogCode={catalogCode}
        vehicleId={vehicleId}
        quickGroupId={selectedChildGroup.quickgroupid}
        groupName={selectedChildGroup.name}
        ssd={ssd}
        onBack={() => setSelectedChildGroup(null)}
      />
    );
  }

  return (
    <div className="w-full">
      <div className="mb-4 flex items-center">
        <button
          onClick={onBack}
          className="flex items-center text-blue-600 hover:text-blue-800 mr-4"
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ –≥—Ä—É–ø–ø–∞–º
        </button>
        <h2 className="text-xl font-semibold">{predefinedCategory.name}</h2>
      </div>

      <div className="border rounded p-4">
        <h3 className="text-lg font-semibold mb-4">–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
        
        {predefinedCategory.children && predefinedCategory.children.length > 0 ? (
          <div className="grid gap-3 md:grid-cols-2 lg:grid-cols-3">
            {predefinedCategory.children.map((child) => {
              const isValidId = /^\d+$/.test(child.quickgroupid);
              
              return (
                <div
                  key={child.quickgroupid}
                  className={`border border-gray-200 rounded-lg p-4 transition-shadow cursor-pointer ${
                    isValidId 
                      ? 'hover:shadow-md hover:border-blue-300' 
                      : 'opacity-60 cursor-not-allowed bg-gray-50'
                  }`}
                  onClick={() => handleChildGroupClick(child)}
                >
                  <h4 className="font-medium text-gray-900 mb-2">{child.name}</h4>
                  <p className="text-sm text-gray-600">ID: {child.quickgroupid}</p>
                  {isValidId ? (
                    <div className="mt-3 text-blue-600 text-sm font-medium">
                      –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏ ‚Üí
                    </div>
                  ) : (
                    <div className="mt-3 text-gray-500 text-sm">
                      –ü–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        ) : (
          <div className="text-center py-8 text-gray-500">
            <p>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π</p>
          </div>
        )}
        
        <div className="mt-6 p-4 bg-blue-50 rounded-lg">
          <h4 className="font-medium text-blue-900 mb-2">üí° –°–æ–≤–µ—Ç</h4>
          <p className="text-sm text-blue-800">
            –î–ª—è –ø–æ–∏—Å–∫–∞ –¥–µ—Ç–∞–ª–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{predefinedCategory.name}" —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
          </p>
          <ul className="text-sm text-blue-700 mt-2 ml-4 list-disc">
            <li>–ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É (OEM –Ω–æ–º–µ—Ä—É)</li>
            <li>–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–µ—Ç–∞–ª–∏</li>
            <li>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞</li>
            <li>–ì—Ä—É–ø–ø—ã –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

const GroupItem: React.FC<GroupItemProps> = ({ group, level, onGroupClick }) => {
  const [isExpanded, setIsExpanded] = useState(false);

  const handleClick = () => {
    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –≥—Ä—É–ø–ø—ã:', {
      name: group.name,
      quickgroupid: group.quickgroupid,
      link: group.link,
      hasChildren: group.children && group.children.length > 0
    });
    
    // –ï—Å–ª–∏ —É –≥—Ä—É–ø–ø—ã –µ—Å—Ç—å –¥–µ—Ç–∏ - —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º/—Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
    if (group.children && group.children.length > 0) {
      console.log('üìÇ –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≥—Ä—É–ø–ø—É —Å –¥–µ—Ç—å–º–∏');
      setIsExpanded(!isExpanded);
    } 
    // –ï—Å–ª–∏ —É –≥—Ä—É–ø–ø—ã –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ - –ø–µ—Ä–µ–¥–∞–µ–º –∫–ª–∏–∫ –Ω–∞–≤–µ—Ä—Ö –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π
    else if (group.link && group.quickgroupid) {
      console.log('üîó –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥—Ä—É–ø–ø–µ —Å —Å—Å—ã–ª–∫–æ–π');
      onGroupClick(group);
    }
    // –ò–Ω–∞—á–µ - —ç—Ç–æ –≥—Ä—É–ø–ø–∞ –±–µ–∑ —Å—Å—ã–ª–∫–∏ –∏ –±–µ–∑ –¥–µ—Ç–µ–π
    else {
      console.log('‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ –±–µ–∑ —Å—Å—ã–ª–∫–∏ –∏ –±–µ–∑ –¥–µ—Ç–µ–π:', group.name);
    }
  };

  return (
    <div style={{ marginLeft: `${level * 20}px` }}>
      <div 
        className={`flex items-center p-2 hover:bg-gray-100 cursor-pointer ${group.link ? 'text-blue-600' : ''}`}
        onClick={handleClick}
      >
        {group.children && group.children.length > 0 && (
          <span className="mr-2">{isExpanded ? '‚ñº' : '‚ñ∂'}</span>
        )}
        <span>{group.name}</span>
        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        {group.children && group.children.length > 0 && (
          <span className="ml-auto text-xs text-gray-500">
            ({group.children.length})
          </span>
        )}
      </div>
      {isExpanded && group.children && (
        <div>
          {group.children.map((child, index) => (
            <GroupItem
              key={child.quickgroupid || index}
              group={child}
              level={level + 1}
              onGroupClick={onGroupClick}
            />
          ))}
        </div>
      )}
    </div>
  );
};

type CatalogType = 'quickGroups' | 'categories' | 'units' | 'standardCategories';

const CatalogGroupsSection: React.FC<CatalogGroupsSectionProps> = ({ 
  catalogCode, 
  vehicleId, 
  ssd 
}) => {
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const [catalogType, setCatalogType] = useState<CatalogType>('standardCategories');
  const [selectedGroup, setSelectedGroup] = useState<{ group: LaximoQuickGroup; type: CatalogType } | null>(null);
  const [selectedPredefinedCategory, setSelectedPredefinedCategory] = useState<LaximoQuickGroup | null>(null);
  const [standardCategories, setStandardCategories] = useState<LaximoQuickGroup[]>([]);
  const [selectedCategoryId, setSelectedCategoryId] = useState<string | null>(null);

  // –ó–∞–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–æ–≤
  const { data: quickGroupsData, loading: quickGroupsLoading, error: quickGroupsError } = useQuery<{ laximoQuickGroups: LaximoQuickGroup[] }>(
    GET_LAXIMO_QUICK_GROUPS,
    {
      variables: {
        catalogCode,
        vehicleId,
        ...(ssd && ssd.trim() !== '' && { ssd })
      },
      skip: !catalogCode || !vehicleId || catalogType !== 'quickGroups',
      errorPolicy: 'all'
    }
  );

  const { data: categoriesData, loading: categoriesLoading, error: categoriesError } = useQuery<{ laximoCategories: LaximoQuickGroup[] }>(
    GET_LAXIMO_CATEGORIES,
    {
      variables: { 
        catalogCode,
        ...(vehicleId && { vehicleId }),
        ...(ssd && ssd.trim() !== '' && { ssd })
      },
      skip: !catalogCode || catalogType !== 'categories',
      errorPolicy: 'all'
    }
  );

  // –ó–∞–ø—Ä–æ—Å –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ –∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
  const { data: standardCategoriesData, loading: standardCategoriesLoading, error: standardCategoriesError } = useQuery<{ laximoCategories: LaximoQuickGroup[] }>(
    GET_LAXIMO_CATEGORIES,
    {
      variables: { 
        catalogCode,
        ...(vehicleId && { vehicleId }),
        ...(ssd && ssd.trim() !== '' && { ssd })
      },
      skip: !catalogCode || catalogType !== 'standardCategories',
      errorPolicy: 'all'
    }
  );

  const { data: unitsData, loading: unitsLoading, error: unitsError } = useQuery<{ laximoUnits: LaximoQuickGroup[] }>(
    GET_LAXIMO_UNITS,
    {
      variables: {
        catalogCode,
        ...(vehicleId && { vehicleId }),
        ...(ssd && ssd.trim() !== '' && { ssd }),
        ...(selectedCategoryId && { categoryId: selectedCategoryId })
      },
      skip: !catalogCode || catalogType !== 'units',
      errorPolicy: 'all'
    }
  );

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  useEffect(() => {
    console.log('üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    console.log('üìä standardCategoriesData:', standardCategoriesData);
    console.log('‚ùå standardCategoriesError:', standardCategoriesError);
    
    if (standardCategoriesData?.laximoCategories && standardCategoriesData.laximoCategories.length > 0) {
      console.log('üìã –ü–æ–ª—É—á–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç API:', standardCategoriesData.laximoCategories.length, '–∫–∞—Ç–µ–≥–æ—Ä–∏–π');
      console.log('üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', standardCategoriesData.laximoCategories.map(c => `${c.name} (ID: ${c.quickgroupid})`));
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û —Ä–µ–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç API Laximo
      console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç API Laximo');
      setStandardCategories(standardCategoriesData.laximoCategories);
    } else if (standardCategoriesError) {
      console.warn('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', standardCategoriesError.message);
      console.log('üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–∫ fallback');
      setStandardCategories(getStaticCategories());
    } else if (!standardCategoriesLoading) {
      // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
      console.log('üìã –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç API, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
      setStandardCategories(getStaticCategories());
    }
    // –ï—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  }, [standardCategoriesData, standardCategoriesError, standardCategoriesLoading]);

  const handleGroupClick = (group: LaximoQuickGroup) => {
    console.log('üîç –ö–ª–∏–∫ –ø–æ –≥—Ä—É–ø–ø–µ:', group);
    console.log('üìÇ –¢–∏–ø –∫–∞—Ç–∞–ª–æ–≥–∞:', catalogType);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≥—Ä—É–ø–ø–∞ –∏–º–µ–µ—Ç —Å—Å—ã–ª–∫—É –∏ –≤–∞–ª–∏–¥–Ω—ã–π ID
    if (!group.link || !group.quickgroupid) {
      console.warn('‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ –Ω–µ –∏–º–µ–µ—Ç —Å—Å—ã–ª–∫–∏ –∏–ª–∏ ID:', group);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ID –≥—Ä—É–ø–ø—ã –Ω–µ –ø—É—Å—Ç–æ–π
    if (!group.quickgroupid.trim()) {
      console.error('‚ùå –ü—É—Å—Ç–æ–π ID –≥—Ä—É–ø–ø—ã:', group.quickgroupid);
      alert(`–û—à–∏–±–∫–∞: –ü—É—Å—Ç–æ–π ID –≥—Ä—É–ø–ø—ã –¥–ª—è –≥—Ä—É–ø–ø—ã "${group.name}"`);
      return;
    }
    
    // –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (—Ä–µ–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç API Laximo)
    if (catalogType === 'standardCategories') {
      console.log('üîç –ö–ª–∏–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ API Laximo:', group.name, 'ID:', group.quickgroupid);
      
      // –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ—Ç API –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —É–∑–ª—ã —á–µ—Ä–µ–∑ ListUnits
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–£–∑–ª—ã" –∏ –ø–µ—Ä–µ–¥–∞–µ–º categoryId
      if (ssd && ssd.trim() !== '') {
        console.log('‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —É–∑–ª—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', group.quickgroupid);
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ç–∏–ø 'units' –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        setCatalogType('units');
        setSelectedCategoryId(group.quickgroupid);
        return;
      } else {
        alert('–û—à–∏–±–∫–∞: –î–ª—è –ø–æ–∏—Å–∫–∞ —É–∑–ª–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è (SSD). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞–Ω–æ–≤–æ.');
        return;
      }
    }
    
    // –î–ª—è –≥—Ä—É–ø–ø –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞, —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–µ—Ç–∞–ª—è–º
    if ((catalogType === 'quickGroups' || catalogType === 'categories' || catalogType === 'units' || 
         (catalogType === 'standardCategories' && (!group.children || group.children.length === 0))) && 
        ssd && ssd.trim() !== '') {
      console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–µ—Ç–∞–ª—è–º –≥—Ä—É–ø–ø—ã:', group.quickgroupid);
      setSelectedGroup({ group, type: catalogType });
    } else if (!ssd || ssd.trim() === '') {
      alert('–û—à–∏–±–∫–∞: –î–ª—è –ø–æ–∏—Å–∫–∞ –¥–µ—Ç–∞–ª–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è (SSD). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞–Ω–æ–≤–æ.');
    } else {
      // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –ø–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert
      alert(`–ü–æ–∏—Å–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π –≤ –≥—Ä—É–ø–ø–µ: ${group.name}\nID –≥—Ä—É–ø–ø—ã: ${group.quickgroupid}\n–¢–∏–ø –∫–∞—Ç–∞–ª–æ–≥–∞: ${catalogType}`);
    }
  };

  const handleBackToGroups = () => {
    setSelectedGroup(null);
    setSelectedPredefinedCategory(null);
  };

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º selectedCategoryId –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–∏–ø–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
  useEffect(() => {
    if (catalogType !== 'units') {
      setSelectedCategoryId(null);
    }
  }, [catalogType]);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
  let currentData: LaximoQuickGroup[] = [];
  let loading = false;
  let error = null;

  switch (catalogType) {
    case 'quickGroups':
      currentData = quickGroupsData?.laximoQuickGroups || [];
      loading = quickGroupsLoading;
      error = quickGroupsError;
      break;
    case 'categories':
      currentData = categoriesData?.laximoCategories || [];
      loading = categoriesLoading;
      error = categoriesError;
      break;
    case 'units':
      currentData = unitsData?.laximoUnits || [];
      loading = unitsLoading;
      error = unitsError;
      break;
    case 'standardCategories':
      currentData = standardCategories;
      loading = standardCategoriesLoading && standardCategories.length === 0;
      error = standardCategoriesError;
      break;
  }

  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
  let catalogTypeTitle = '';
  if (catalogType === 'quickGroups') {
    catalogTypeTitle = '–ì—Ä—É–ø–ø—ã –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞';
  } else if (catalogType === 'categories') {
    catalogTypeTitle = '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞';
  } else if (catalogType === 'units') {
    if (selectedCategoryId) {
      // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const selectedCategory = standardCategories.find(cat => cat.quickgroupid === selectedCategoryId);
      catalogTypeTitle = selectedCategory ? `–£–∑–ª—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${selectedCategory.name}` : '–£–∑–ª—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
    } else {
      catalogTypeTitle = '–£–∑–ª—ã –∫–∞—Ç–∞–ª–æ–≥–∞';
    }
  } else if (catalogType === 'standardCategories') {
    catalogTypeTitle = '–ì—Ä—É–ø–ø—ã –∑–∞–ø—á–∞—Å—Ç–µ–π';
  }

  // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—ë –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (selectedPredefinedCategory && ssd) {
    return (
      <PredefinedCategoryDetailsSection
        catalogCode={catalogCode}
        vehicleId={vehicleId}
        predefinedCategory={selectedPredefinedCategory}
        ssd={ssd}
        onBack={handleBackToGroups}
      />
    );
  }

  // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –≥—Ä—É–ø–ø–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π
  if (selectedGroup) {
    return (
      <GroupDetailsSection
        catalogCode={catalogCode}
        vehicleId={vehicleId}
        quickGroupId={selectedGroup.group.quickgroupid}
        groupName={selectedGroup.group.name}
        ssd={ssd || ''}
        onBack={handleBackToGroups}
      />
    );
  }

  return (
    <div className="w-full">
      <div className="mb-4 flex space-x-4">
        <button
          onClick={() => setCatalogType('standardCategories')}
          className={`px-4 py-2 rounded ${
            catalogType === 'standardCategories' ? 'bg-red-600 text-white' : 'bg-gray-200'
          }`}
        >
          –ì—Ä—É–ø–ø—ã –∑–∞–ø—á–∞—Å—Ç–µ–π
        </button>
        <button
          onClick={() => setCatalogType('categories')}
          className={`px-4 py-2 rounded ${
            catalogType === 'categories' ? 'bg-red-600 text-white' : 'bg-gray-200'
          }`}
        >
          –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
        </button>
        <button
          onClick={() => setCatalogType('quickGroups')}
          className={`px-4 py-2 rounded ${
            catalogType === 'quickGroups' ? 'bg-red-600 text-white' : 'bg-gray-200'
          }`}
        >
          –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫
        </button>
        <button
          onClick={() => setCatalogType('units')}
          className={`px-4 py-2 rounded ${
            catalogType === 'units' ? 'bg-red-600 text-white' : 'bg-gray-200'
          }`}
        >
          –£–∑–ª—ã
        </button>
      </div>

      <div className="border rounded p-4">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold">{catalogTypeTitle}</h3>
          {catalogType === 'units' && selectedCategoryId && (
            <button
              onClick={() => {
                setCatalogType('standardCategories');
                setSelectedCategoryId(null);
              }}
              className="px-3 py-1 text-sm bg-gray-200 hover:bg-gray-300 rounded"
            >
              ‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            </button>
          )}
        </div>
        
        {loading && (
          <div className="flex items-center justify-center py-8">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-red-600"></div>
            <span className="ml-2">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
          </div>
        )}

        {error && (
          <div className="text-red-600 py-4">
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          </div>
        )}

        {!loading && !error && currentData.length === 0 && (
          <div className="text-gray-500 py-4">
            –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
          </div>
        )}

        {!loading && !error && currentData.length > 0 && (
          <div className="space-y-2">
            <div className="mb-4 text-sm text-gray-600">
              –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {currentData.length}
            </div>
            {currentData.map((group) => (
              <GroupItem
                key={group.quickgroupid}
                group={group}
                level={0}
                onGroupClick={handleGroupClick}
              />
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default CatalogGroupsSection; 