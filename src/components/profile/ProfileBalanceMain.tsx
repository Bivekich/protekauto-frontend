import * as React from "react";
import { useState } from "react";
import { useQuery, useMutation } from '@apollo/client';
import { GET_CLIENT_ME, CREATE_BALANCE_INVOICE } from '@/lib/graphql';
import toast from 'react-hot-toast';
import ProfileBalanceCard from "./ProfileBalanceCard";

interface LegalEntity {
  id: string;
  shortName: string;
  fullName: string;
  form: string;
  inn: string;
}

interface Contract {
  id: string;
  contractNumber: string;
  contractDate: string;
  name: string;
  ourLegalEntity: string;
  clientLegalEntity: string;
  balance: number;
  currency: string;
  isActive: boolean;
  isDefault: boolean;
  contractType: string;
  relationship: string;
  paymentDelay: boolean;
  creditLimit?: number;
  delayDays?: number;
  fileUrl?: string;
  createdAt: string;
  updatedAt: string;
}

interface ClientData {
  id: string;
  name: string;
  email?: string;
  phone: string;
  legalEntities: LegalEntity[];
  contracts: Contract[];
}

const ProfileBalanceMain = () => {
  const [isCreatingInvoice, setIsCreatingInvoice] = useState(false);
  
  const { data, loading, error, refetch } = useQuery(GET_CLIENT_ME, {
    onError: (error) => {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞:', error);
    }
  });

  const [createBalanceInvoice] = useMutation(CREATE_BALANCE_INVOICE, {
    onCompleted: async (data) => {
      console.log('–°—á–µ—Ç –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω:', data.createBalanceInvoice);
      
      const invoice = data.createBalanceInvoice;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—á–µ—Ç —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
      if (!invoice || !invoice.id) {
        toast.error('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞');
        setIsCreatingInvoice(false);
        return;
      }
      
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ Apollo Client
        let token = null;
        const userData = localStorage.getItem('userData');
        
        if (userData) {
          try {
            const user = JSON.parse(userData);
            if (!user.id) {
              throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
            // –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç CMS
            token = `client_${user.id}`;
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ userData:', error);
            toast.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            setIsCreatingInvoice(false);
            return;
          }
        }
        
        if (!token) {
          toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–π—Ç–∏.');
          setIsCreatingInvoice(false);
          return;
        }
        
        // –°–∫–∞—á–∏–≤–∞–µ–º PDF —Å —Ç–æ–∫–µ–Ω–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const baseUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000';
        const downloadUrl = `${baseUrl}/api/invoice/${invoice.id}`;
        
        if (!baseUrl) {
          throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω URL API —Å–µ—Ä–≤–µ—Ä–∞');
        }
        
        const response = await fetch(downloadUrl, {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        
        if (!response.ok) {
          let errorMessage = `HTTP ${response.status}`;
          try {
            const errorData = await response.json();
            errorMessage = errorData.error || errorData.message || errorMessage;
          } catch (jsonError) {
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
            try {
              const errorText = await response.text();
              if (errorText) {
                errorMessage = errorText.substring(0, 100); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
              }
            } catch (textError) {
              // –ï—Å–ª–∏ –∏ —Ç–µ–∫—Å—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
              errorMessage = `–û—à–∏–±–∫–∞ ${response.status}: ${response.statusText}`;
            }
          }
          throw new Error(errorMessage);
        }
        
        // –°–æ–∑–¥–∞–µ–º blob –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `invoice-${invoice.invoiceNumber}.pdf`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        toast.success(`–°—á–µ—Ç ${invoice.invoiceNumber} —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω!`, {
          duration: 5000,
          icon: 'üìÑ'
        });
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF:', error);
        const errorMessage = error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
        toast.error(`–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF: ${errorMessage}`);
      }
      
      setIsCreatingInvoice(false);
      refetch();
    },
    onError: (error) => {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:', error);
      toast.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞: ' + error.message);
      setIsCreatingInvoice(false);
    }
  });

  const handleCreateInvoice = async (contractId: string, amount: number) => {
    if (isCreatingInvoice) return;
    
    setIsCreatingInvoice(true);
    const loadingToast = toast.loading('–°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É...');

    try {
      const { data } = await createBalanceInvoice({
        variables: {
          contractId: contractId,
          amount: amount
        }
      });

      if (data?.createBalanceInvoice) {
        toast.dismiss(loadingToast);
        // –õ–æ–≥–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —É–∂–µ –≤ onCompleted –º—É—Ç–∞—Ü–∏–∏
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        await refetch();
      }
    } catch (error) {
      toast.dismiss(loadingToast);
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:', error);
      const errorMessage = error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      toast.error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞: ${errorMessage}`);
      setIsCreatingInvoice(false);
    }
  };



  if (loading) {
    return (
      <div className="flex flex-col justify-center">
        <div className="flex overflow-hidden flex-col justify-center p-8 w-full bg-white rounded-2xl min-h-[543px] max-md:px-5 max-md:max-w-full">
          <div className="flex flex-col justify-center items-center p-8">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-red-600"></div>
            <div className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex flex-col justify-center">
        <div className="flex overflow-hidden flex-col justify-center p-8 w-full bg-white rounded-2xl min-h-[543px] max-md:px-5 max-md:max-w-full">
          <div className="flex flex-col justify-center items-center p-8">
            <div className="text-red-600 text-center">
              <div className="text-lg font-semibold mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>
              <div className="text-sm">{error.message}</div>
              <button 
                onClick={() => refetch()} 
                className="mt-4 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700"
              >
                –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  const clientData: ClientData | null = data?.clientMe || null;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞
  if (!clientData?.legalEntities?.length) {
    return (
      <div className="flex flex-col justify-center">
        <div className="flex overflow-hidden flex-col justify-center p-8 w-full bg-white rounded-2xl min-h-[543px] max-md:px-5 max-md:max-w-full">
          <div className="flex flex-col justify-center items-center p-8">
            <div className="text-center">
              <div className="text-lg font-semibold mb-2">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–ª–∞–Ω—Å–∞–º</div>
              <div className="text-sm text-gray-600 mb-4">
                –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–∞–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è
              </div>
              <a 
                href="/profile-settings"
                className="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700"
              >
                –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
              </a>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–æ–≥–æ–≤–æ—Ä—ã
  if (!clientData?.contracts?.length) {
    return (
      <div className="flex flex-col flex-1 shrink justify-center basis-0 w-full max-md:max-w-full">
        <div className="flex overflow-hidden flex-col justify-center p-8 w-full bg-white rounded-2xl min-h-[543px] max-md:px-5 max-md:max-w-full">
          <div className="flex flex-col justify-center items-center p-8">
            <div className="text-center">
              <div className="text-lg font-semibold mb-2">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤</div>
              <div className="text-sm text-gray-600 mb-4">
                –î–æ–≥–æ–≤–æ—Ä—ã —Å –±–∞–ª–∞–Ω—Å–∞–º–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à–∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü
              </div>
              <div className="text-sm text-gray-500">
                –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–∫—É–ø–∫–∏ –≤ –¥–æ–ª–≥
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  const formatCurrency = (amount: number, currency: string = 'RUB') => {
    return `${amount.toLocaleString('ru-RU')} ${currency === 'RUB' ? '‚ÇΩ' : currency}`;
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  const calculateDaysLeft = (delayDays?: number) => {
    if (!delayDays) return '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π';
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    return `–û—Å—Ç–∞–ª–æ—Å—å ${Math.max(0, delayDays)} –¥–Ω–µ–π`;
  };

  const getLegalEntityName = (clientLegalEntity: string) => {
    // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ null, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ
    if (!clientLegalEntity || clientLegalEntity.trim() === '') {
      return clientData?.legalEntities?.[0]?.shortName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    }
    
    // –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –æ—Ç –ª–∏—à–Ω–∏—Ö –∫–∞–≤—ã—á–µ–∫
    const cleanedName = clientLegalEntity.replace(/^"(.*)"$/, '$1');
    
    // –ò—â–µ–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ ID
    const entity = clientData?.legalEntities?.find(le => 
      le.shortName === clientLegalEntity || 
      le.shortName === cleanedName ||
      le.id === clientLegalEntity ||
      le.fullName === clientLegalEntity ||
      le.fullName === cleanedName
    );
    
    return entity ? entity.shortName : cleanedName;
  };

  return (
    <div className="flex flex-col flex-1 shrink justify-center basis-0 w-full max-md:max-w-full">
      <div className="flex overflow-hidden flex-col justify-center p-8 w-full bg-white rounded-2xl min-h-[543px] max-md:px-5 max-md:max-w-full">
        <div className="flex flex-wrap flex-1 gap-5 size-full max-md:max-w-full">
          {clientData.contracts.filter(contract => contract.isActive).map((contract) => {
            const hasLimit = contract.creditLimit !== null && contract.creditLimit !== undefined;
            const limitLeft = hasLimit ? Math.max(0, (contract.creditLimit || 0) + contract.balance) : 0;
            const isOverLimit = contract.balance < 0 && hasLimit && Math.abs(contract.balance) > (contract.creditLimit || 0);
            
            return (
              <ProfileBalanceCard
                key={contract.id}
                contractId={contract.id}
                orgName={getLegalEntityName(contract.clientLegalEntity)}
                contract={`–î–æ–≥–æ–≤–æ—Ä ‚Ññ ${contract.contractNumber} –æ—Ç ${formatDate(contract.contractDate)}`}
                balance={formatCurrency(contract.balance, contract.currency)}
                limit={hasLimit ? formatCurrency(contract.creditLimit || 0, contract.currency) : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}
                limitLeft={hasLimit ? formatCurrency(limitLeft, contract.currency) : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}
                ordersSum="0 ‚ÇΩ" // TODO: –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—á–µ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–æ–≤
                days={contract.delayDays ? `${contract.delayDays} –¥–Ω–µ–π` : '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}
                daysLeft={calculateDaysLeft(contract.delayDays)}
                paid="0 ‚ÇΩ" // TODO: –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—á–µ—Ç –æ–ø–ª–∞—á–µ–Ω–Ω–æ–π —Å—É–º–º—ã
                inputValue="0 ‚ÇΩ"
                buttonLabel="–ü–æ–ø–æ–ª–Ω–∏—Ç—å"
                onTopUp={handleCreateInvoice}
                isOverLimit={Boolean(isOverLimit)}
                isCreatingInvoice={isCreatingInvoice}
              />
            );
          })}
        </div>
      </div>
    </div>
  );
}

export default ProfileBalanceMain;


